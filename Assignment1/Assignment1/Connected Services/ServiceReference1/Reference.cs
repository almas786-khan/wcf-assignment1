//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckPrime", ReplyAction="http://tempuri.org/IService1/CheckPrimeResponse")]
        int CheckPrime(int n1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckPrime", ReplyAction="http://tempuri.org/IService1/CheckPrimeResponse")]
        System.Threading.Tasks.Task<int> CheckPrimeAsync(int n1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sum", ReplyAction="http://tempuri.org/IService1/SumResponse")]
        int Sum(int n1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sum", ReplyAction="http://tempuri.org/IService1/SumResponse")]
        System.Threading.Tasks.Task<int> SumAsync(int n1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReverseString", ReplyAction="http://tempuri.org/IService1/ReverseStringResponse")]
        string ReverseString(string s1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReverseString", ReplyAction="http://tempuri.org/IService1/ReverseStringResponse")]
        System.Threading.Tasks.Task<string> ReverseStringAsync(string s1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HTMLTag", ReplyAction="http://tempuri.org/IService1/HTMLTagResponse")]
        string HTMLTag(string tag, string s1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/HTMLTag", ReplyAction="http://tempuri.org/IService1/HTMLTagResponse")]
        System.Threading.Tasks.Task<string> HTMLTagAsync(string tag, string s1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SortNum", ReplyAction="http://tempuri.org/IService1/SortNumResponse")]
        int[] SortNum(int[] s1, string sortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SortNum", ReplyAction="http://tempuri.org/IService1/SortNumResponse")]
        System.Threading.Tasks.Task<int[]> SortNumAsync(int[] s1, string sortOrder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Assignment1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Assignment1.ServiceReference1.IService1>, Assignment1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CheckPrime(int n1) {
            return base.Channel.CheckPrime(n1);
        }
        
        public System.Threading.Tasks.Task<int> CheckPrimeAsync(int n1) {
            return base.Channel.CheckPrimeAsync(n1);
        }
        
        public int Sum(int n1) {
            return base.Channel.Sum(n1);
        }
        
        public System.Threading.Tasks.Task<int> SumAsync(int n1) {
            return base.Channel.SumAsync(n1);
        }
        
        public string ReverseString(string s1) {
            return base.Channel.ReverseString(s1);
        }
        
        public System.Threading.Tasks.Task<string> ReverseStringAsync(string s1) {
            return base.Channel.ReverseStringAsync(s1);
        }
        
        public string HTMLTag(string tag, string s1) {
            return base.Channel.HTMLTag(tag, s1);
        }
        
        public System.Threading.Tasks.Task<string> HTMLTagAsync(string tag, string s1) {
            return base.Channel.HTMLTagAsync(tag, s1);
        }
        
        public int[] SortNum(int[] s1, string sortOrder) {
            return base.Channel.SortNum(s1, sortOrder);
        }
        
        public System.Threading.Tasks.Task<int[]> SortNumAsync(int[] s1, string sortOrder) {
            return base.Channel.SortNumAsync(s1, sortOrder);
        }
    }
}
